class PivotPiece is subclass of Piece

instance variables
	protected currentRotation: nat1;

operations

	public PivotPiece: int * int * Type * char ==> PivotPiece
	PivotPiece(x, y, t, s) == (
		currentRotation := 1;
		Piece(x, y, t, s);
	);
	
	public getRotation: () ==> nat1
	getRotation() == (
		return 1;
	);
	
	public setRotation: nat1 ==> ()
	setRotation(rot) == (
		currentRotation := rot;
		rotation();
	);
	
	public rotate: () ==> ()
	rotate() == (
		rotation();
	);
	
	protected rotation: () ==> ()
	rotation() == (
		if currentRotation = 4 then
			currentRotation := 1
		else
			currentRotation := currentRotation + 1;
		sprite := rotateSprite(originalTiles);
		setTranslation(translation.x, translation.y);
	);
	
	protected rotateSprite: Sprite ==> Sprite
	rotateSprite(sp) == (
		dcl newSp: Sprite := sp;
		for inc = 1 to len sp do (
			 newSp(inc).x := sp(inc).x * cos(currentRotation) + sp(inc).y * sin(currentRotation);
			 newSp(inc).y := sp(inc).y * cos(currentRotation) - sp(inc).x * sin(currentRotation);
		);
		return newSp;
	);
	
	private static cos: nat1 ==> int
	cos(rot) == (
		dcl cos: int := 0;
		cases rot:
			1 -> cos := 1,
			2 -> cos := 0,
			3 -> cos := -1,
			4 -> cos := 0
		end;
		return cos;
	)
	pre rot < 5
	post RESULT = 0 or RESULT = 1 or RESULT = -1;
	
	private static sin: nat1 ==> int
	sin(rot) == (
		dcl cos: int := 0;
		cases rot:
			1 -> cos := 0,
			2 -> cos := 1,
			3 -> cos := 0,
			4 -> cos := -1
		end;
		return cos;
	)
	pre rot < 5
	post RESULT = 0 or RESULT = 1 or RESULT = -1;
	
end PivotPiece