class Table

types
	private Row = seq of char;
	
values

instance variables
	private rows : nat;
	private columns : nat;
	private table: seq of Row;
	
operations
	public Table: nat * nat ==> Table
	Table(r,c) == (
		rows := r;
		columns := c;
		table := [];
		for inc1 = 1 to rows do (
			dcl tempRow: Row := [];
			for inc2 = 1 to columns do (
				tempRow := tempRow ^ ['0'];
			);
			table := table ^ [tempRow];
		);
		return self;
	);
		
	public print: () ==> nat
	print() == (
		return 3;
	)
			
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Table